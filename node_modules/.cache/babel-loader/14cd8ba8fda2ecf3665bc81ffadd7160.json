{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rickyrivaldo98/glints/fund-frontend/src/components/ModalLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState, useFormInput } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { MdClose } from \"react-icons/md\";\nexport const ModalLog = ({\n  showModalLog,\n  setShowModalLog\n}) => {\n  _s();\n\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModalLog ? 1 : 0,\n    transform: showModalLog ? `translateY(0%)` : `translateY(-100%)`\n  });\n  const username = useFormInput(\"\");\n  const password = useFormInput(\"\");\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModalLog(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModalLog ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backgroundModal\",\n      ref: modalRef,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ModalWrapperLog\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ModalContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  class: \"form-control\",\n                  id: \"email\",\n                  placeholder: \"Enter Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  class: \"form-control\",\n                  id: \"password\",\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-block mt-5\",\n                children: \"LOG IN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MdClose, {\n            className: \"CloseModalButton\",\n            \"aria-label\": \"Close Modal\",\n            onClick: () => setShowModalLog(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(ModalLog, \"WpSmy7dK7A9sjyJ0/wvfFbSDMY4=\", false, function () {\n  return [useSpring, useFormInput, useFormInput];\n});\n\n_c = ModalLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLog\");","map":{"version":3,"sources":["/home/rickyrivaldo98/glints/fund-frontend/src/components/ModalLog.js"],"names":["React","useRef","useEffect","useCallback","useState","useFormInput","useSpring","animated","MdClose","ModalLog","showModalLog","setShowModalLog","modalRef","animation","config","duration","opacity","transform","username","password","closeModal","e","current","target","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACEC,MADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,YALF,QAMO,OANP;AAOA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAuC;AAAA;;AAC7D,QAAMC,QAAQ,GAAGX,MAAM,EAAvB;AACA,QAAMY,SAAS,GAAGP,SAAS,CAAC;AAC1BQ,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEN,YAAY,GAAG,CAAH,GAAO,CAJF;AAK1BO,IAAAA,SAAS,EAAEP,YAAY,GAAI,gBAAJ,GAAuB;AALpB,GAAD,CAA3B;AAOA,QAAMQ,QAAQ,GAAGb,YAAY,CAAC,EAAD,CAA7B;AACA,QAAMc,QAAQ,GAAGd,YAAY,CAAC,EAAD,CAA7B;;AAEA,QAAMe,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIT,QAAQ,CAACU,OAAT,KAAqBD,CAAC,CAACE,MAA3B,EAAmC;AACjCZ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAJD;;AAMA,sBACE;AAAA,cACGD,YAAY,gBACX;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEE,QAAtC;AAAgD,MAAA,OAAO,EAAEQ,UAAzD;AAAA,6BACE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEP,SAArB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCACE;AAAK,gBAAA,KAAK,EAAC,YAAX;AAAA,wCACE;AAAO,kBAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,KAAK,EAAC,cAFR;AAGE,kBAAA,EAAE,EAAC,OAHL;AAIE,kBAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE;AAAK,gBAAA,KAAK,EAAC,YAAX;AAAA,wCACE;AAAO,kBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,KAAK,EAAC,cAFR;AAGE,kBAAA,EAAE,EAAC,UAHL;AAIE,kBAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAmBE;AAAQ,gBAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAyBE,QAAC,OAAD;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,0BAAW,aAFb;AAGE,YAAA,OAAO,EAAE,MAAMF,eAAe,CAAEa,IAAD,IAAU,CAACA,IAAZ;AAHhC;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADW,GAoCT;AArCN,mBADF;AAyCD,CA3DM;;GAAMf,Q;UAEOH,S,EAODD,Y,EACAA,Y;;;KAVNI,Q","sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useState,\n  useFormInput,\n} from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { MdClose } from \"react-icons/md\";\n\nexport const ModalLog = ({ showModalLog, setShowModalLog }) => {\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: showModalLog ? 1 : 0,\n    transform: showModalLog ? `translateY(0%)` : `translateY(-100%)`,\n  });\n  const username = useFormInput(\"\");\n  const password = useFormInput(\"\");\n\n  const closeModal = (e) => {\n    if (modalRef.current === e.target) {\n      setShowModalLog(false);\n    }\n  };\n\n  return (\n    <>\n      {showModalLog ? (\n        <div className=\"backgroundModal\" ref={modalRef} onClick={closeModal}>\n          <animated.div style={animation}>\n            <div className=\"ModalWrapperLog\">\n              <div className=\"ModalContent\">\n                <h4>Log In</h4>\n                <form>\n                  <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      id=\"email\"\n                      placeholder=\"Enter Email\"\n                    />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      class=\"form-control\"\n                      id=\"password\"\n                      placeholder=\"Enter Password\"\n                    />\n                  </div>\n                  <button className=\"btn-block mt-5\">LOG IN</button>\n                </form>\n              </div>\n              <MdClose\n                className=\"CloseModalButton\"\n                aria-label=\"Close Modal\"\n                onClick={() => setShowModalLog((prev) => !prev)}\n              />\n            </div>\n          </animated.div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}