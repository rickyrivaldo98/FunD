{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rickyrivaldo98/glints/fund-frontend/src/components/ModalLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSpring, animated } from \"react-spring\";\nimport { MdClose } from \"react-icons/md\";\nimport { setUserSession } from \"../Utils/Common\";\nimport { useHistory } from \"react-router-dom\";\nexport const ModalLog = ({\n  showModalLog,\n  setShowModalLog\n}) => {\n  _s();\n\n  let history = useHistory();\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModalLog ? 1 : 0,\n    transform: showModalLog ? `translateY(0%)` : `translateY(-100%)`\n  });\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange1 = e => setUsername(e.target.value);\n\n  const handleChange2 = e => setPassword(e.target.value);\n\n  const handleLogin = e => {\n    e.preventDefault();\n    console.log(\"here\");\n    setError(null);\n    setLoading(true);\n    const user = {\n      email: username,\n      password: password\n    };\n    axios.post(`http://13.238.142.2/login`, {\n      email: username,\n      password: password\n    }).then(res => {\n      console.log(res);\n      setLoading(false);\n      setUserSession(res.data.token, res.data.fullName);\n      history.push(\"../pages/Landing.js\");\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModalLog(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"user:\" + username), console.log(\"Pass:\" + password), showModalLog ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backgroundModal\",\n        ref: modalRef,\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          style: animation,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ModalWrapperLog\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ModalContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"email\",\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    id: \"email\",\n                    placeholder: \"Enter Email\",\n                    onChange: handleChange1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    id: \"password\",\n                    placeholder: \"Enter Password\",\n                    onChange: handleChange2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-block mt-5\" // value={loading ? \"Loading...\" : \"Login\"}\n                  ,\n                  type: \"submit\" // onClick={handleLogin}\n                  ,\n                  children: loading ? \"Loading...\" : \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MdClose, {\n              className: \"CloseModalButton\",\n              \"aria-label\": \"Close Modal\",\n              onClick: () => setShowModalLog(prev => !prev)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(ModalLog, \"SD5EvkHT3mKdEeULUPa6YNHm9lo=\", false, function () {\n  return [useHistory, useSpring];\n});\n\n_c = ModalLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLog\");","map":{"version":3,"sources":["/home/rickyrivaldo98/glints/fund-frontend/src/components/ModalLog.js"],"names":["React","useRef","useEffect","useCallback","useState","axios","useSpring","animated","MdClose","setUserSession","useHistory","ModalLog","showModalLog","setShowModalLog","history","modalRef","animation","config","duration","opacity","transform","username","setUsername","password","setPassword","error","setError","loading","setLoading","handleChange1","e","target","value","handleChange2","handleLogin","preventDefault","console","log","user","email","post","then","res","data","token","fullName","push","catch","closeModal","current","prev"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useSpring, animated } from \"react-spring\";\nimport { MdClose } from \"react-icons/md\";\nimport { setUserSession } from \"../Utils/Common\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const ModalLog = ({ showModalLog, setShowModalLog }) => {\n  let history = useHistory();\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: showModalLog ? 1 : 0,\n    transform: showModalLog ? `translateY(0%)` : `translateY(-100%)`,\n  });\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange1 = (e) => setUsername(e.target.value);\n  const handleChange2 = (e) => setPassword(e.target.value);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    console.log(\"here\");\n    setError(null);\n    setLoading(true);\n    const user = {\n      email: username,\n      password: password,\n    };\n    axios\n      .post(`http://13.238.142.2/login`, {\n        email: username,\n        password: password,\n      })\n      .then((res) => {\n        console.log(res);\n        setLoading(false);\n        setUserSession(res.data.token, res.data.fullName);\n        history.push(\"../pages/Landing.js\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  };\n\n  const closeModal = (e) => {\n    if (modalRef.current === e.target) {\n      setShowModalLog(false);\n    }\n  };\n\n  return (\n    <>\n      {console.log(\"user:\" + username)}\n      {console.log(\"Pass:\" + password)}\n\n      {showModalLog ? (\n        <form onSubmit={handleLogin}>\n          <div className=\"backgroundModal\" ref={modalRef} onClick={closeModal}>\n            <animated.div style={animation}>\n              <div className=\"ModalWrapperLog\">\n                <div className=\"ModalContent\">\n                  <h4>Log In</h4>\n                  <form>\n                    <div className=\"form-group\">\n                      <label for=\"email\">Email</label>\n                      <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        id=\"email\"\n                        placeholder=\"Enter Email\"\n                        onChange={handleChange1}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label for=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        id=\"password\"\n                        placeholder=\"Enter Password\"\n                        onChange={handleChange2}\n                      />\n                    </div>\n                    <button\n                      className=\"btn-block mt-5\"\n                      // value={loading ? \"Loading...\" : \"Login\"}\n                      type=\"submit\"\n                      // onClick={handleLogin}\n                    >\n                      {loading ? \"Loading...\" : \"Login\"}\n                    </button>\n                  </form>\n                </div>\n                <MdClose\n                  className=\"CloseModalButton\"\n                  aria-label=\"Close Modal\"\n                  onClick={() => setShowModalLog((prev) => !prev)}\n                />\n              </div>\n            </animated.div>\n          </div>\n        </form>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}